// Code generated by goctl. DO NOT EDIT.
// Source: admin.proto

package server

import (
	"context"

	"gyu-api-backend/app/admin/rpc/internal/logic/interfaceinfo"
	"gyu-api-backend/app/admin/rpc/internal/svc"
	"gyu-api-backend/app/admin/rpc/pb"
)

type InterfaceInfoServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedInterfaceInfoServer
}

func NewInterfaceInfoServer(svcCtx *svc.ServiceContext) *InterfaceInfoServer {
	return &InterfaceInfoServer{
		svcCtx: svcCtx,
	}
}

func (s *InterfaceInfoServer) AddInterfaceInfo(ctx context.Context, in *pb.AddInterfaceInfoReq) (*pb.AddInterfaceInfoResp, error) {
	l := interfaceinfologic.NewAddInterfaceInfoLogic(ctx, s.svcCtx)
	return l.AddInterfaceInfo(in)
}

func (s *InterfaceInfoServer) UpdateInterfaceInfo(ctx context.Context, in *pb.UpdateInterfaceInfoReq) (*pb.UpdateInterfaceInfoResp, error) {
	l := interfaceinfologic.NewUpdateInterfaceInfoLogic(ctx, s.svcCtx)
	return l.UpdateInterfaceInfo(in)
}

func (s *InterfaceInfoServer) DeleteInterfaceInfo(ctx context.Context, in *pb.DeleteInterfaceInfoReq) (*pb.DeleteInterfaceInfoResp, error) {
	l := interfaceinfologic.NewDeleteInterfaceInfoLogic(ctx, s.svcCtx)
	return l.DeleteInterfaceInfo(in)
}

func (s *InterfaceInfoServer) GetInterfaceInfo(ctx context.Context, in *pb.GetInterfaceInfoReq) (*pb.GetInterfaceInfoResp, error) {
	l := interfaceinfologic.NewGetInterfaceInfoLogic(ctx, s.svcCtx)
	return l.GetInterfaceInfo(in)
}

func (s *InterfaceInfoServer) GetPageList(ctx context.Context, in *pb.PageListReq) (*pb.PageListResp, error) {
	l := interfaceinfologic.NewGetPageListLogic(ctx, s.svcCtx)
	return l.GetPageList(in)
}

func (s *InterfaceInfoServer) OnlineInterfaceInfo(ctx context.Context, in *pb.OnlineInterfaceInfoReq) (*pb.OnlineInterfaceInfoResp, error) {
	l := interfaceinfologic.NewOnlineInterfaceInfoLogic(ctx, s.svcCtx)
	return l.OnlineInterfaceInfo(in)
}

func (s *InterfaceInfoServer) OfflineInterfaceInfo(ctx context.Context, in *pb.OfflineInterfaceInfoReq) (*pb.OfflineInterfaceInfoResp, error) {
	l := interfaceinfologic.NewOfflineInterfaceInfoLogic(ctx, s.svcCtx)
	return l.OfflineInterfaceInfo(in)
}

func (s *InterfaceInfoServer) InvokeInterfaceInfo(ctx context.Context, in *pb.InvokeInterfaceInfoReq) (*pb.InvokeInterfaceInfoResp, error) {
	l := interfaceinfologic.NewInvokeInterfaceInfoLogic(ctx, s.svcCtx)
	return l.InvokeInterfaceInfo(in)
}

func (s *InterfaceInfoServer) InvokeInterfaceCount(ctx context.Context, in *pb.UpdateInvokeInterfaceCountReq) (*pb.UpdateInvokeInterfaceCountResp, error) {
	l := interfaceinfologic.NewInvokeInterfaceCountLogic(ctx, s.svcCtx)
	return l.InvokeInterfaceCount(in)
}

func (s *InterfaceInfoServer) GetTopNInvokeInterfaceInfo(ctx context.Context, in *pb.GetTopNInvokeInterfaceInfoReq) (*pb.GetTopNInvokeInterfaceInfoResp, error) {
	l := interfaceinfologic.NewGetTopNInvokeInterfaceInfoLogic(ctx, s.svcCtx)
	return l.GetTopNInvokeInterfaceInfo(in)
}
