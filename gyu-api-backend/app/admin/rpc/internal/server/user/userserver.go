// Code generated by goctl. DO NOT EDIT.
// Source: admin.proto

package server

import (
	"context"

	"gyu-api-backend/app/admin/rpc/internal/logic/user"
	"gyu-api-backend/app/admin/rpc/internal/svc"
	"gyu-api-backend/app/admin/rpc/pb"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) Login(ctx context.Context, in *pb.LoginReq) (*pb.LoginResp, error) {
	l := userlogic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServer) Register(ctx context.Context, in *pb.RegisterReq) (*pb.RegisterResp, error) {
	l := userlogic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserServer) CurrentUser(ctx context.Context, in *pb.CurrentUserReq) (*pb.CurrentUserResp, error) {
	l := userlogic.NewCurrentUserLogic(ctx, s.svcCtx)
	return l.CurrentUser(in)
}

func (s *UserServer) Logout(ctx context.Context, in *pb.LogoutReq) (*pb.LogoutResp, error) {
	l := userlogic.NewLogoutLogic(ctx, s.svcCtx)
	return l.Logout(in)
}
