// Code generated by goctl. DO NOT EDIT.
// Source: admin.proto

package interfaceinfo

import (
	"context"

	"gyu-api-backend/app/admin/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddInterfaceInfoReq            = pb.AddInterfaceInfoReq
	AddInterfaceInfoResp           = pb.AddInterfaceInfoResp
	CurrentUserReq                 = pb.CurrentUserReq
	CurrentUserResp                = pb.CurrentUserResp
	DeleteInterfaceInfoReq         = pb.DeleteInterfaceInfoReq
	DeleteInterfaceInfoResp        = pb.DeleteInterfaceInfoResp
	GetInterfaceInfoReq            = pb.GetInterfaceInfoReq
	GetInterfaceInfoResp           = pb.GetInterfaceInfoResp
	GetInvokeUserReq               = pb.GetInvokeUserReq
	GetInvokeUserResp              = pb.GetInvokeUserResp
	GetTopNInvokeInterfaceInfoReq  = pb.GetTopNInvokeInterfaceInfoReq
	GetTopNInvokeInterfaceInfoResp = pb.GetTopNInvokeInterfaceInfoResp
	InterfaceInfo                  = pb.InterfaceInfo
	InvokeInterfaceInfo            = pb.InvokeInterfaceInfo
	InvokeInterfaceInfoReq         = pb.InvokeInterfaceInfoReq
	InvokeInterfaceInfoResp        = pb.InvokeInterfaceInfoResp
	LoginReq                       = pb.LoginReq
	LoginResp                      = pb.LoginResp
	LogoutReq                      = pb.LogoutReq
	LogoutResp                     = pb.LogoutResp
	OfflineInterfaceInfoReq        = pb.OfflineInterfaceInfoReq
	OfflineInterfaceInfoResp       = pb.OfflineInterfaceInfoResp
	OnlineInterfaceInfoReq         = pb.OnlineInterfaceInfoReq
	OnlineInterfaceInfoResp        = pb.OnlineInterfaceInfoResp
	PageListReq                    = pb.PageListReq
	PageListResp                   = pb.PageListResp
	RegisterReq                    = pb.RegisterReq
	RegisterResp                   = pb.RegisterResp
	UpdateInterfaceInfoReq         = pb.UpdateInterfaceInfoReq
	UpdateInterfaceInfoResp        = pb.UpdateInterfaceInfoResp
	UpdateInvokeInterfaceCountReq  = pb.UpdateInvokeInterfaceCountReq
	UpdateInvokeInterfaceCountResp = pb.UpdateInvokeInterfaceCountResp
	User                           = pb.User

	InterfaceInfoZrpcClient interface {
		AddInterfaceInfo(ctx context.Context, in *AddInterfaceInfoReq, opts ...grpc.CallOption) (*AddInterfaceInfoResp, error)
		UpdateInterfaceInfo(ctx context.Context, in *UpdateInterfaceInfoReq, opts ...grpc.CallOption) (*UpdateInterfaceInfoResp, error)
		DeleteInterfaceInfo(ctx context.Context, in *DeleteInterfaceInfoReq, opts ...grpc.CallOption) (*DeleteInterfaceInfoResp, error)
		GetInterfaceInfo(ctx context.Context, in *GetInterfaceInfoReq, opts ...grpc.CallOption) (*GetInterfaceInfoResp, error)
		GetPageList(ctx context.Context, in *PageListReq, opts ...grpc.CallOption) (*PageListResp, error)
		OnlineInterfaceInfo(ctx context.Context, in *OnlineInterfaceInfoReq, opts ...grpc.CallOption) (*OnlineInterfaceInfoResp, error)
		OfflineInterfaceInfo(ctx context.Context, in *OfflineInterfaceInfoReq, opts ...grpc.CallOption) (*OfflineInterfaceInfoResp, error)
		InvokeInterfaceInfo(ctx context.Context, in *InvokeInterfaceInfoReq, opts ...grpc.CallOption) (*InvokeInterfaceInfoResp, error)
		InvokeInterfaceCount(ctx context.Context, in *UpdateInvokeInterfaceCountReq, opts ...grpc.CallOption) (*UpdateInvokeInterfaceCountResp, error)
		GetTopNInvokeInterfaceInfo(ctx context.Context, in *GetTopNInvokeInterfaceInfoReq, opts ...grpc.CallOption) (*GetTopNInvokeInterfaceInfoResp, error)
	}

	defaultInterfaceInfoZrpcClient struct {
		cli zrpc.Client
	}
)

func NewInterfaceInfoZrpcClient(cli zrpc.Client) InterfaceInfoZrpcClient {
	return &defaultInterfaceInfoZrpcClient{
		cli: cli,
	}
}

func (m *defaultInterfaceInfoZrpcClient) AddInterfaceInfo(ctx context.Context, in *AddInterfaceInfoReq, opts ...grpc.CallOption) (*AddInterfaceInfoResp, error) {
	client := pb.NewInterfaceInfoClient(m.cli.Conn())
	return client.AddInterfaceInfo(ctx, in, opts...)
}

func (m *defaultInterfaceInfoZrpcClient) UpdateInterfaceInfo(ctx context.Context, in *UpdateInterfaceInfoReq, opts ...grpc.CallOption) (*UpdateInterfaceInfoResp, error) {
	client := pb.NewInterfaceInfoClient(m.cli.Conn())
	return client.UpdateInterfaceInfo(ctx, in, opts...)
}

func (m *defaultInterfaceInfoZrpcClient) DeleteInterfaceInfo(ctx context.Context, in *DeleteInterfaceInfoReq, opts ...grpc.CallOption) (*DeleteInterfaceInfoResp, error) {
	client := pb.NewInterfaceInfoClient(m.cli.Conn())
	return client.DeleteInterfaceInfo(ctx, in, opts...)
}

func (m *defaultInterfaceInfoZrpcClient) GetInterfaceInfo(ctx context.Context, in *GetInterfaceInfoReq, opts ...grpc.CallOption) (*GetInterfaceInfoResp, error) {
	client := pb.NewInterfaceInfoClient(m.cli.Conn())
	return client.GetInterfaceInfo(ctx, in, opts...)
}

func (m *defaultInterfaceInfoZrpcClient) GetPageList(ctx context.Context, in *PageListReq, opts ...grpc.CallOption) (*PageListResp, error) {
	client := pb.NewInterfaceInfoClient(m.cli.Conn())
	return client.GetPageList(ctx, in, opts...)
}

func (m *defaultInterfaceInfoZrpcClient) OnlineInterfaceInfo(ctx context.Context, in *OnlineInterfaceInfoReq, opts ...grpc.CallOption) (*OnlineInterfaceInfoResp, error) {
	client := pb.NewInterfaceInfoClient(m.cli.Conn())
	return client.OnlineInterfaceInfo(ctx, in, opts...)
}

func (m *defaultInterfaceInfoZrpcClient) OfflineInterfaceInfo(ctx context.Context, in *OfflineInterfaceInfoReq, opts ...grpc.CallOption) (*OfflineInterfaceInfoResp, error) {
	client := pb.NewInterfaceInfoClient(m.cli.Conn())
	return client.OfflineInterfaceInfo(ctx, in, opts...)
}

func (m *defaultInterfaceInfoZrpcClient) InvokeInterfaceInfo(ctx context.Context, in *InvokeInterfaceInfoReq, opts ...grpc.CallOption) (*InvokeInterfaceInfoResp, error) {
	client := pb.NewInterfaceInfoClient(m.cli.Conn())
	return client.InvokeInterfaceInfo(ctx, in, opts...)
}

func (m *defaultInterfaceInfoZrpcClient) InvokeInterfaceCount(ctx context.Context, in *UpdateInvokeInterfaceCountReq, opts ...grpc.CallOption) (*UpdateInvokeInterfaceCountResp, error) {
	client := pb.NewInterfaceInfoClient(m.cli.Conn())
	return client.InvokeInterfaceCount(ctx, in, opts...)
}

func (m *defaultInterfaceInfoZrpcClient) GetTopNInvokeInterfaceInfo(ctx context.Context, in *GetTopNInvokeInterfaceInfoReq, opts ...grpc.CallOption) (*GetTopNInvokeInterfaceInfoResp, error) {
	client := pb.NewInterfaceInfoClient(m.cli.Conn())
	return client.GetTopNInvokeInterfaceInfo(ctx, in, opts...)
}
